import 'dart:core';

// IMedia Interface
abstract class Media {
  final String
  id; // Unique ID generated by the IMedia object itself (e.g., UUID)
  final String ownerID; // ID of the user who owns this media
  final String sourceIdentifier; // Original source path/URL

  Media({
    String? id, // Allow null for new objects, constructor generates if null
    required this.ownerID,
    required this.sourceIdentifier,
  }) : id = id ?? _generateUuid(); // Generate ID if not provided

  // Method to generate a UUID (conceptual, actual implementation uses a package)
  static String _generateUuid() {
    // In a real app, you'd use a UUID package like 'uuid'
    // For MVI, a simple placeholder or a real UUID generator can be used.
    return '${DateTime.now().microsecondsSinceEpoch}-temp'; // Placeholder
  }

  // Abstract properties common to all media types (e.g., title, duration)
  String get title;
  Duration get duration; // Or int durationMs;

  // Method to convert to a flexible map for persistence/API
  Map<String, dynamic> toMap();
}
